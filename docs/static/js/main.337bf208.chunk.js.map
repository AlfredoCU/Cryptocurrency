{"version":3,"sources":["assets/crypto.png","components/Img.js","components/Select.js","components/Button.js","components/Form.js","hooks/useForm.js","components/Results.js","helpers/api.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Img","className","src","crypto","alt","Select","elements","label","name","value","handleInputChange","htmlFor","id","onChange","disabled","map","element","Name","FullName","Id","SelectMemo","memo","Button","title","type","ButtonMemo","Form","coins","cryptoc","valuesCoins","initialState","useState","inputs","setInputs","target","useForm","coin","reset","error","setError","onSubmit","e","preventDefault","trim","FormMemo","Results","quotation","Object","keys","length","Price","Highday","Logday","Hours24","LastUpdate","defaultProps","ResultsMemo","COINS","getCryptocurrency","a","axios","get","Data","data","cryptocy","item","CoinInfo","console","getQuotation","url","DISPLAY","quo","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","App","setCrypto","values","setValues","setQuotation","useCallback","useEffect","then","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.337bf208.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/crypto.51f1d2ed.png\";","import crypto from \"../assets/crypto.png\";\n\nconst Img = () => (\n  <div className=\"p-5 lg:p-10 order-last sm:order-first\">\n    <img src={crypto} alt=\"Imagen de Criptomonedas\" />\n  </div>\n);\n\nexport { Img };\n","import { memo } from \"react\";\nimport { arrayOf, shape, string, func } from \"prop-types\";\n\nconst Select = ({ elements, label, name, value, handleInputChange }) => (\n  <div className=\"my-2 p-2\">\n    <label className=\"font-light\" htmlFor={name} id={`label-${name}`}>\n      {label}:\n    </label>\n    <select\n      id={name}\n      name={name}\n      value={value}\n      onChange={handleInputChange}\n      className=\"w-full p-2 my-1 rounded text-gray-500 focus:outline-none focus:ring focus:border-blue-300\"\n    >\n      <option value=\"\" disabled>\n        Seleccione una opción\n      </option>\n      {elements &&\n        elements.map(element => (\n          <option key={element.Id} value={element.Name}>\n            {element.FullName}\n          </option>\n        ))}\n    </select>\n  </div>\n);\n\nSelect.propTypes = {\n  elements: arrayOf(\n    shape({\n      Id: string.isRequired,\n      Name: string.isRequired,\n      FullName: string.isRequired\n    })\n  ).isRequired,\n  label: string.isRequired,\n  name: string.isRequired,\n  value: string.isRequired,\n  handleInputChange: func.isRequired\n};\n\nconst SelectMemo = memo(Select);\nexport { SelectMemo as Select };\n","import { memo } from \"react\";\nimport { string } from \"prop-types\";\n\nconst Button = ({ title, type }) => (\n  <div className=\"p-2\">\n    <button\n      type={type}\n      className=\"transition ease-in duration-500 hover:bg-yellow-500 w-full px-5 py-2 bg-blue-500 rounded uppercase font-bold focus:outline-white\"\n    >\n      {title}\n    </button>\n  </div>\n);\n\nButton.propTypes = {\n  title: string.isRequired,\n  type: string.isRequired\n};\n\nconst ButtonMemo = memo(Button);\nexport { ButtonMemo as Button };\n","import { memo, useState } from \"react\";\nimport { arrayOf, shape, string, func } from \"prop-types\";\nimport { Select } from \"./Select\";\nimport { Button } from \"./Button\";\nimport { useForm } from \"../hooks/useForm\";\n\nconst Form = ({ coins, cryptoc, valuesCoins }) => {\n  const [inputs, handleInputChange, reset] = useForm({ coin: \"\", crypto: \"\" });\n\n  const [error, setError] = useState(false);\n\n  const { coin, crypto } = inputs;\n\n  const submit = e => {\n    e.preventDefault();\n\n    if ((coin.trim() === \"\") | (crypto.trim() === \"\")) {\n      setError(true);\n      return;\n    }\n\n    valuesCoins(inputs);\n    setError(false);\n    reset();\n  };\n\n  return (\n    <form className=\"p-5 lg:p-10 text-white uppercase\" onSubmit={submit}>\n      <h1 className=\"text-2xl sm:text-3xl font-bold text-center\">\n        Cotizador de criptomonedas\n      </h1>\n      <Select\n        name=\"coin\"\n        value={coin}\n        label=\"Elige tu moneda\"\n        elements={coins}\n        handleInputChange={handleInputChange}\n      />\n      <Select\n        name=\"crypto\"\n        value={crypto}\n        elements={cryptoc}\n        label=\"Elige tu criptomoneda\"\n        handleInputChange={handleInputChange}\n      />\n      {error && (\n        <p className=\"text-center font-light bg-red-700 rounded p-1 m-2\">\n          Los campos están vacíos\n        </p>\n      )}\n      <Button type=\"submit\" title=\"Cotizar\" />\n    </form>\n  );\n};\n\nForm.propTypes = {\n  coins: arrayOf(\n    shape({\n      Id: string.isRequired,\n      Name: string.isRequired,\n      FullName: string.isRequired\n    }).isRequired\n  ),\n  cryptoc: arrayOf(\n    shape({\n      Id: string.isRequired,\n      Name: string.isRequired,\n      FullName: string.isRequired\n    }).isRequired\n  ),\n  valuesCoins: func.isRequired\n};\n\nconst FormMemo = memo(Form);\nexport { FormMemo as Form };\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [inputs, setInputs] = useState(initialState);\n\n  const reset = () => {\n    setInputs(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setInputs({ ...inputs, [target.name]: target.value });\n  };\n\n  return [inputs, handleInputChange, reset];\n};\n","import { memo } from \"react\";\nimport { shape, string } from \"prop-types\";\n\nconst Results = ({ quotation }) => (\n  <>\n    {Object.keys(quotation).length !== 0 && (\n      <div className=\"px-5 lg:px-10\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 text-center p-2\">\n          <div className=\"bg-white rounded-full border-4 border-yellow-500 mx-1 my-2 pt-2\">\n            <p className=\"text-base lg:text-lg\">{quotation.Price}</p>\n            <p className=\"text-sm pb-2\">El precio</p>\n          </div>\n          <div className=\"bg-white rounded-full border-4 border-red-500 mx-1 my-2 pt-2\">\n            <p className=\"text-base lg:text-lg\">{quotation.Highday}</p>\n            <p className=\"text-sm pb-2\">Precio más alto del día</p>\n          </div>\n          <div className=\"bg-white rounded-full border-4 border-blue-500 mx-1 my-2 pt-2\">\n            <p className=\"text-base lg:text-lg\">{quotation.Logday}</p>\n            <p className=\"text-sm pb-2\">Precio más bajo del día</p>\n          </div>\n          <div className=\"bg-white rounded-full border-4 border-indigo-500 mx-1 my-2 pt-2\">\n            <p className=\"text-base lg:text-lg\">{quotation.Hours24}</p>\n            <p className=\"text-sm pb-2\">Variación de las últimas 24 horas</p>\n          </div>\n          <div className=\"lg:col-span-2 bg-white rounded-full border-4 border-green-500 mx-1 my-2 pt-2\">\n            <p className=\"text-base lg:text-lg\">{quotation.LastUpdate}</p>\n            <p className=\"text-sm pb-2\">Última Actualización</p>\n          </div>\n        </div>\n      </div>\n    )}\n  </>\n);\n\nResults.propTypes = {\n  quotation: shape({\n    Price: string,\n    Highday: string,\n    Logday: string,\n    Hours24: string,\n    LastUpdate: string\n  })\n};\n\nResults.defaultProps = {\n  quotation: {}\n};\n\nconst ResultsMemo = memo(Results);\nexport { ResultsMemo as Results };\n","import axios from \"axios\";\n\nexport const COINS = [\n  { Id: \"1-USD\", Name: \"USD\", FullName: \"Dolar de Estados Unidos\" },\n  { Id: \"2-MXN\", Name: \"MXN\", FullName: \"Peso Mexicano\" },\n  { Id: \"3-EUR\", Name: \"EUR\", FullName: \"Euro\" },\n  { Id: \"4-GBP\", Name: \"GBP\", FullName: \"Libra Esterlina\" }\n];\n\nexport const getCryptocurrency = async () => {\n  try {\n    const url = `https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD`;\n\n    const {\n      data: { Data }\n    } = await axios.get(url);\n\n    const cryptocy = Data.map(item => {\n      return {\n        Id: item.CoinInfo.Id,\n        Name: item.CoinInfo.Name,\n        FullName: item.CoinInfo.FullName\n      };\n    });\n\n    return cryptocy;\n  } catch (error) {\n    console.error(\"GET_CRYPTOCURRENCY_ERROR\", error);\n  }\n};\n\nexport const getQuotation = async (crypto, coin) => {\n  try {\n    const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${crypto}&tsyms=${coin}`;\n\n    const {\n      data: { DISPLAY }\n    } = await axios.get(url);\n\n    const quo = DISPLAY[crypto][coin];\n\n    return {\n      Price: quo.PRICE,\n      Highday: quo.HIGHDAY,\n      Logday: quo.LOWDAY,\n      Hours24: quo.CHANGEPCT24HOUR,\n      LastUpdate: quo.LASTUPDATE\n    };\n  } catch (error) {\n    console.error(\"GET_QUOTATION_ERROR\", error);\n  }\n};\n","import { useState, useEffect, useCallback } from \"react\";\nimport { Img, Form, Results } from \"../components/index\";\nimport { COINS, getCryptocurrency, getQuotation } from \"../helpers/api\";\n\nconst App = () => {\n  const [crypto, setCrypto] = useState([]);\n  const [values, setValues] = useState(null);\n  const [quotation, setQuotation] = useState({});\n\n  const valuesCoins = useCallback(\n    data => {\n      setValues(data);\n    },\n    [setValues]\n  );\n\n  useEffect(() => {\n    getCryptocurrency()\n      .then(data => setCrypto(data))\n      .catch(error => console.error(\"USE_EFFECT_ERROR\", error));\n  }, []);\n\n  useEffect(() => {\n    if (!!values) {\n      const { coin, crypto } = values;\n      getQuotation(crypto, coin)\n        .then(data => setQuotation(data))\n        .catch(error => console.error(\"USE_EFFECT_ERROR\", error));\n    } else {\n      return;\n    }\n  }, [values]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 my-10\">\n        <Img />\n        <div>\n          <Form coins={COINS} cryptoc={crypto} valuesCoins={valuesCoins} />\n          <Results quotation={quotation} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { App };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport { App } from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}